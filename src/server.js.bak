// import dotenv from 'dotenv'
// import next from 'next'
// import nextBuild from 'next/dist/build'
// import path from 'path'
// // This will depend on whether your index.ts file and general
// // app setup is located below a src folder or not.
// dotenv.config({
//     path: path.resolve(__dirname, '../.env'),
//   })
//
// import express from 'express'
//
// const app = express()
// const PORT = process.env.PORT || 3000
//
// const start = async (): Promise<void> => {
//     if (process.env.NEXT_BUILD) {
//         app.listen(PORT, async () => {
//             console.log(`Next.js is now building...`)
//             // @ts-expect-error
//             await nextBuild(path.join(__dirname, '..'))
//             process.exit()
//           })
//
//         return
//       }
//
//     const nextApp = next({
//         dev: process.env.NODE_ENV !== 'production',
//       })
//
//     const nextHandler = nextApp.getRequestHandler()
//
//     app.use((req, res) => nextHandler(req, res))
//
//     nextApp.prepare().then(() => {
//         console.log('Next.js started')
//
//         app.listen(PORT, async () => {
//             console.log(`Next.js App URL: ${process.env.NEXT_SERVER_URL}`)
//           })
//       })
//   }
//
// start()

const express = require('express');
const next = require('next');

const dev = process.env.NODE_ENV !== 'production';
const app = next({ dev });
const handle = app.getRequestHandler();

app.prepare().then(() => {
  const server = express();

  // Custom route example
  server.get('/p/:id', (req, res) => {
    const actualPage = '/post';
    const queryParams = { id: req.params.id };
    app.render(req, res, actualPage, queryParams);
  });

  // Default request handler
  server.get('*', (req, res) => {
    return handle(req, res);
  });

  server.listen(3000, err => {
    if (err) throw err;
    console.log('> Ready on http://localhost:3000');
  });
});